package OverRide;
/*
方法的重写 （override/overwrite)
1.重写 子类继承父类之后，可以对父类的同名同参数方法，进行覆盖操作
2应用 重写以后，当创建子类对象以后，通过子类对象调用父类同名同参数的方法时，实际执行的是子类重写父类的方法
3 重写的规定
          方法的声明 ：权限修饰符 返回值类型 方法名(形参列表)throw 异常的类型{
          //方法体
          }
          约定俗成 :子类中的叫重写的方法，父类中叫被重写的方法
          ① 子类中重写的方法的方法名和形参列表与父类被重写的方法的方法名和形参列表相同
          ② 子类重写的方法的权限修饰符不小于父类被重写的方法的权限修饰符
          特殊情况 子类不能重写父类中的private权限方法
          ③返回值类型
          父类被重写的方法的返回值类型是void子类重写的方法的返回值类型也只能是void
          父类被重写的方法返回值是A类型，则子类重写的方法的返回值类型是A类或A类的子类
          父类的返回值类型是基本数据类型，则子类返回值类型必须相同数据类型
          ④ 子类重写的方法抛出的异常类型不大于父类被重写的方法抛出的异常类型
          子类和父类同名同参数方法声明为非static。或者都是static(不是重写）
 */
public class PersonTest {
    public static void main(String[]args){
        Student s =new Student("潘栋",25,"计算机科学与技术");
        s.eat();
        s.walk();
        s.study();
    }
}
